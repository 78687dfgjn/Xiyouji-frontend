{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"User\",\n  data() {\n    return {\n      districtOptions: [],\n      districtValue: [],\n      multipleSelection: [],\n      tableData: [],\n      total: 0,\n      pageSize: 5,\n      pageNum: 1,\n      nickname: \"\",\n      account: \"\",\n      province: \"\",\n      centerDialogVisible: false,\n      // userState: true,\n      ruleForm: {\n        nickname: \"\",\n        phoneNumber: \"\",\n        email: \"\",\n        password: \"\",\n        sex: \"\",\n        district: {\n          province: \"\",\n          city: \"\",\n          county: \"\"\n        },\n        districtId: null,\n        birthday: \"\"\n      },\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      dateTimeRange: [],\n      // dateTimeRange: [new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)],\n      rules: {\n        nickname: [{\n          required: false,\n          message: \"请输入用户昵称\",\n          trigger: \"blur\"\n        }, {\n          min: 1,\n          max: 10,\n          message: \"长度在 1 到 10 个字符\",\n          trigger: \"blur\"\n        }],\n        phoneNumber: [{\n          required: true,\n          message: \"请输入手机号码\",\n          trigger: \"blur\"\n        }\n        // { min: 3, max: 5, message: \"长度在 3 到 5 个字符\", trigger: \"blur\" },\n        ],\n        email: [{\n          required: false,\n          message: \"请输入用户邮箱\",\n          trigger: \"blur\"\n        }\n        // { min: 3, max: 5, message: \"长度在 3 到 5 个字符\", trigger: \"blur\" },\n        ],\n        password: [{\n          required: true,\n          message: \"请输入用户密码\",\n          trigger: \"blur\"\n        }\n        // { min: 3, max: 5, message: \"长度在 3 到 5 个字符\", trigger: \"blur\" },\n        ],\n        region: {\n          province: [{\n            required: false,\n            message: \"请选择用户所属省份\",\n            trigger: \"change\"\n          }],\n          city: [{\n            required: false,\n            message: \"请选择用户所属城市\",\n            trigger: \"change\"\n          }],\n          county: [{\n            required: false,\n            message: \"请选择用户所属县区\",\n            trigger: \"change\"\n          }]\n        },\n        birthday: [{\n          // type: \"date\",\n          required: false,\n          message: \"请选择用户创建时间\",\n          trigger: \"change\"\n        }]\n      },\n      // blankForm: {\n      //   nickname: \"\",\n      //   phoneNumber: \"\",\n      //   email: \"\",\n      //   password: \"\",\n      //   sex: null,\n      //   province: \"\",\n      //   city: \"\",\n      //   county: \"\",\n      //   districtId: null,\n      //   birthday: \"\",\n      //   avatar: \"\",\n      //   createTime: \"\",\n      // },\n      myHeaders: {\n        token: localStorage.getItem(\"accountData\") ? JSON.parse(localStorage.getItem(\"accountData\")).token : null\n      }\n    };\n  },\n  watch: {\n    deep: true,\n    districtValue(newValue, oldValue) {\n      if (newValue[2]) {\n        this.ruleForm.province = newValue[0];\n        this.ruleForm.city = newValue[1];\n        const arr = newValue[2].split(\"/\");\n        this.ruleForm.districtId = arr[0];\n        this.ruleForm.county = arr[1];\n      }\n      // console.log(newValue, oldValue);\n    }\n  },\n  methods: {\n    handleAvatarSuccess(res, file) {\n      this.ruleForm.avatar = res.data;\n      // this.$store.state.info = this.ruleForm;\n      // localStorage.setItem(\"admin\", JSON.stringify(this.ruleForm));\n      // this.submitForm();\n    },\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === \"image/jpeg\";\n      const isLt8M = file.size / 1024 / 1024 < 8;\n      if (!isJPG) {\n        this.$message.error(\"上传头像图片只能是 JPG 格式!\");\n      }\n      if (!isLt8M) {\n        this.$message.error(\"上传头像图片大小不能超过 8MB!\");\n      }\n      return isJPG && isLt8M;\n    },\n    save() {\n      //防止浏览器默认填密码行为\n      // this.resetForm()\n      const blankForm = {};\n      for (let key in this.ruleForm) {\n        blankForm[key] = '';\n      }\n      this.ruleForm = {\n        ...blankForm\n      };\n      // this.ruleForm = {...this.blankForm};\n      // setTimeout(() => {\n      //   this.ruleForm = {...this.blankForm};\n      // }, 100);\n      //防止新增时表不为空值\n      //地区值（数组）不是每个用户的值\n      this.districtValue = [];\n      // this.ruleForm = { ...this.blankForm };\n      this.centerDialogVisible = true;\n    },\n    // toggleSelection(rows) {\n    //   if (rows) {\n    //     rows.forEach((row) => {\n    //       this.$refs.multipleTable.toggleRowSelection(row);\n    //     });\n    //   } else {\n    //     this.$refs.multipleTable.clearSelection();\n    //   }\n    // },\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    search() {\n      this.fetchDate();\n    },\n    fetchDate() {\n      this.request.get(\"/account/page\", {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          nickname: this.nickname,\n          account: this.account,\n          province: this.province,\n          startTime: this.dateTimeRange[0],\n          endTime: this.dateTimeRange[1]\n        }\n      }).then(res => {\n        this.tableData = res.data.records;\n        this.tableData.forEach(ele => {\n          ele.state = ele.state == 1;\n        });\n        this.total = res.data.total;\n      });\n    },\n    stateChange(row) {\n      const accountObj = {\n        id: row.id,\n        state: row.state\n      };\n      accountObj.state = accountObj.state ? 1 : 0;\n      if (accountObj.state == 0) {\n        this.$message({\n          showClose: true,\n          message: \"已禁用用户：\" + row.nickname,\n          type: \"warning\"\n        });\n      } else {\n        this.$message({\n          showClose: true,\n          message: \"用户：\" + row.nickname + \"已解除禁用状态\",\n          type: \"success\"\n        });\n      }\n      this.request.post(\"/account\", accountObj);\n    },\n    handleEdit(row) {\n      this.ruleForm = {\n        ...row\n      };\n      // delete this.ruleForm.state;\n      this.ruleForm.sex = '' + this.ruleForm.sex;\n      this.districtValue = [this.ruleForm.province, this.ruleForm.city, this.ruleForm.districtId + \"/\" + this.ruleForm.county];\n      this.centerDialogVisible = true;\n    },\n    handleSizeChange(val) {\n      // console.log(`每页 ${val} 条`);\n      this.pageSize = val;\n      this.fetchDate();\n    },\n    handleCurrentChange(val) {\n      // console.log(`当前页: ${val}`);\n      this.pageNum = val;\n      this.fetchDate();\n    },\n    reset() {\n      this.nickname = \"\";\n      this.account = \"\";\n      this.province = \"\";\n      this.dateTimeRange = [];\n      this.fetchDate();\n    },\n    multipleDel() {\n      if (this.multipleSelection.length > 0) {\n        this.$confirm(\"此操作将永久删除这些用户, 是否继续?\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(() => {\n          this.multipleSelection.forEach(ele => {\n            this.deleteUser(ele.id);\n            // console.log(ele);\n          });\n          // this.$message({\n\n          //   type: 'success',\n          //   message: '删除成功!'\n          // });\n        }).catch(() => {\n          this.$message({\n            type: \"info\",\n            message: \"已取消删除\"\n          });\n        });\n      }\n    },\n    deleteUser(id) {\n      this.request.delete(\"/account/\" + id).then(res => {\n        if (res) {\n          this.$message.success(\"删除成功\");\n          this.fetchDate();\n        } else {\n          this.$message.error(\"删除失败\");\n        }\n      });\n    },\n    singleDel(id) {\n      this.$confirm(\"此操作将永久删除该用户, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        this.deleteUser(id);\n        // ruleForm;\n        // this.$message({\n\n        //   type: 'success',\n        //   message: '删除成功!'\n        // });\n      }).catch(() => {\n        this.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    submitForm(ruleForm) {\n      this.$refs[ruleForm].validate(valid => {\n        if (valid) {\n          this.ruleForm.sex = +this.ruleForm.sex;\n          //修改用户对话框的不包含用户状态\n          delete this.ruleForm.state;\n          this.request.post(\"/account\", this.ruleForm).then(res => {\n            // console.log(this.ruleForm);\n            if (res) {\n              // console.log(res);\n              this.$message.success(\"保存成功\");\n              this.centerDialogVisible = false;\n              this.fetchDate();\n            } else {\n              this.$message.error(\"保存失败\");\n            }\n          });\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    formatDate(row, column) {\n      const timestamp = row[column.property];\n      const date = new Date(timestamp);\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, \"0\");\n      const day = String(date.getDate()).padStart(2, \"0\");\n      const hours = String(date.getHours()).padStart(2, \"0\");\n      const minutes = String(date.getMinutes()).padStart(2, \"0\");\n      const seconds = String(date.getSeconds()).padStart(2, \"0\");\n      return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n      // return `${year}-${month}-${day}`;\n    },\n    resetForm(ruleForm) {\n      this.$refs[ruleForm].resetFields();\n      this.districtValue = [];\n    },\n    // tableRowClassName({ row, rowIndex }) {\n    //   console.log(row);\n    //   if (!row.state) {\n    //     return \"warning-row\";\n    //   }\n    //   return \"\";\n    // },\n    getDistrict() {\n      // this.request.get(\"\")\n      this.request.get(\"/account/district\").then(res => {\n        res.data.forEach(item => {\n          // 查找省份对象是否已存在\n          let provinceObj = this.districtOptions.find(option => option.label === item.province);\n          if (!provinceObj) {\n            // 如果省份对象不存在，则创建省份对象并添加到数组中\n            provinceObj = {\n              value: item.province,\n              label: item.province,\n              children: []\n            };\n            this.districtOptions.push(provinceObj);\n          }\n\n          // 查找城市对象是否已存在\n          let cityObj = provinceObj.children.find(option => option.label === item.city);\n          if (!cityObj) {\n            // 如果城市对象不存在，则创建城市对象并添加到省份的children数组中\n            cityObj = {\n              value: item.city,\n              label: item.city,\n              children: []\n            };\n            provinceObj.children.push(cityObj);\n          }\n\n          // 创建区县对象并添加到城市的children数组中\n          cityObj.children.push({\n            value: item.id + \"/\" + item.county,\n            label: item.county\n          });\n        });\n        // console.log(this.districtOptions);\n      });\n    }\n  },\n  created() {\n    this.fetchDate();\n    this.getDistrict();\n  },\n  mounted() {\n    // console.log(this.$store.state.info);\n  }\n};","map":{"version":3,"names":["name","data","districtOptions","districtValue","multipleSelection","tableData","total","pageSize","pageNum","nickname","account","province","centerDialogVisible","ruleForm","phoneNumber","email","password","sex","district","city","county","districtId","birthday","pickerOptions","shortcuts","text","onClick","picker","end","Date","start","setTime","getTime","$emit","dateTimeRange","rules","required","message","trigger","min","max","region","myHeaders","token","localStorage","getItem","JSON","parse","watch","deep","newValue","oldValue","arr","split","methods","handleAvatarSuccess","res","file","avatar","beforeAvatarUpload","isJPG","type","isLt8M","size","$message","error","save","blankForm","key","handleSelectionChange","val","search","fetchDate","request","get","params","startTime","endTime","then","records","forEach","ele","state","stateChange","row","accountObj","id","showClose","post","handleEdit","handleSizeChange","handleCurrentChange","reset","multipleDel","length","$confirm","confirmButtonText","cancelButtonText","deleteUser","catch","delete","success","singleDel","submitForm","$refs","validate","valid","console","log","formatDate","column","timestamp","property","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","resetForm","resetFields","getDistrict","item","provinceObj","find","option","label","value","children","push","cityObj","created","mounted"],"sources":["src/views/manageViews/dataManage/User.vue"],"sourcesContent":["<style scoped>\r\n\r\n.avatar-uploader {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 50%;\r\n  margin-left: 30%;\r\n}\r\n\r\n.avatar-uploader:hover {\r\n  border-color: #409eff;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n\r\n  //line-height: 20%;\r\n  //text-align: center;\r\n}\r\n\r\n.avatar {\r\n  //width: 178px;\r\n  //height: 178px;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: block;\r\n}\r\n\r\n/*.search {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}*/\r\n\r\n</style>\r\n\r\n<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <ul>\r\n\r\n        <li>\r\n          <el-input\r\n              v-model=\"nickname\"\r\n              style=\"width: 200px\"\r\n              prefix-icon=\"el-icon-search\"\r\n              placeholder=\"请输入游客昵称\"\r\n          ></el-input>\r\n        </li>\r\n        <li class=\"mg-10\">\r\n          <el-input\r\n              v-model=\"account\"\r\n              style=\"width: 200px\"\r\n              prefix-icon=\"el-icon-search\"\r\n              placeholder=\"请输入游客账号\"\r\n          ></el-input>\r\n        </li>\r\n\r\n        <li class=\"mg-10\">\r\n          <el-input\r\n              v-model=\"province\"\r\n              style=\"width: 200px\"\r\n              prefix-icon=\"el-icon-search\"\r\n              placeholder=\"请输入游客省份\"\r\n          ></el-input>\r\n        </li>\r\n\r\n        <li>\r\n          <el-date-picker\r\n              v-model=\"dateTimeRange\"\r\n              type=\"datetimerange\"\r\n              :picker-options=\"pickerOptions\"\r\n              range-separator=\"至\"\r\n              start-placeholder=\"开始日期\"\r\n              end-placeholder=\"结束日期\"\r\n              align=\"right\">\r\n          </el-date-picker>\r\n        </li>\r\n\r\n        <div class=\"func\">\r\n          <el-button type=\"primary\" @click=\"search\" class=\"mg-10\"\r\n          >搜索\r\n          </el-button\r\n          >\r\n          <el-button type=\"warning\" @click=\"reset\">重置</el-button>\r\n          <el-button type=\"primary\" @click=\"save\" size=\"small\"\r\n          >新增<i class=\"el-icon-circle-plus-outline\"></i\r\n          ></el-button>\r\n          <el-badge :value=\"multipleSelection.length\" class=\"item\">\r\n            <el-button\r\n                type=\"danger\"\r\n                @click=\"multipleDel()\"\r\n                style=\"width: 110px; height: 40px; margin-left: 10px\"\r\n            >\r\n              批量删除\r\n              <i class=\"el-icon-remove-outline\"></i>\r\n            </el-button>\r\n          </el-badge>\r\n          <el-button type=\"primary\" style=\"margin-left: 10px\"\r\n          >导入<i class=\"el-icon-remove-outline\"></i\r\n          ></el-button>\r\n          <el-button type=\"primary\"\r\n          >导出<i class=\"el-icon-remove-outline\"></i\r\n          ></el-button>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n    <el-table\r\n        :data=\"tableData\"\r\n        ref=\"multipleTable\"\r\n        border\r\n        stripe\r\n        @selection-change=\"handleSelectionChange\"\r\n    >\r\n      <el-table-column type=\"selection\" width=\"40\"></el-table-column>\r\n      <el-table-column prop=\"account\" sortable label=\"账号\" width=\"80\">\r\n      </el-table-column>\r\n      <el-table-column\r\n          prop=\"createTime\"\r\n          sortable\r\n          label=\"创建日期\"\r\n          width=\"140\"\r\n          :formatter=\"formatDate\"\r\n      >\r\n      </el-table-column>\r\n\r\n      <el-table-column prop=\"nickname\" label=\"用户昵称\"></el-table-column>\r\n      <el-table-column prop=\"sex\" label=\"性别\" width=\"60\">\r\n        <template slot-scope=\"scope\">\r\n          <!-- 使用 <img> 标签来显示头像 -->\r\n          <el-tag v-if=\"scope.row.sex === 1\">男</el-tag>\r\n          <el-tag type=\"danger\" v-else>女</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"avatar\" label=\"用户头像\" width=\"80\">\r\n        <template slot-scope=\"scope\">\r\n          <!-- 使用 <img> 标签来显示头像 -->\r\n          <!-- <img\r\n                  :src=\"scope.row.avatar\"\r\n                  alt=\"Avatar\"\r\n                  style=\"width: 50px; height: 50px\"\r\n                /> -->\r\n          <el-avatar\r\n              shape=\"square\"\r\n              :size=\"50\"\r\n              :src=\"scope.row.avatar\"\r\n          ></el-avatar>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"province\" label=\"省份\"></el-table-column>\r\n      <el-table-column prop=\"city\" label=\"城市\"></el-table-column>\r\n      <el-table-column prop=\"county\" label=\"县区\"></el-table-column>\r\n      <el-table-column prop=\"state\" label=\"账号状态\">\r\n        <template slot-scope=\"scope\">\r\n          <el-switch\r\n              style=\"display: block; height: 100%\"\r\n              v-model=\"scope.row.state\"\r\n              @change=\"stateChange(scope.row)\"\r\n              active-color=\"#13ce66\"\r\n              inactive-color=\"#ff4949\"\r\n              active-text=\"正常\"\r\n              inactive-text=\"禁用\"\r\n          >\r\n          </el-switch>\r\n          <!-- <el-tag effect=\"dark\" v-if=\"scope.row.state == 1\">正常</el-tag>\r\n                <el-tag effect=\"dark\" type=\"danger\" v-else>禁用</el-tag> -->\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"操作\" fixed=\"right\" class=\"dif\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button-group class=\"operation\">\r\n            <el-button type=\"success\" @click=\"handleEdit(scope.row)\">\r\n              编辑<i class=\"el-icon-edit\"></i>\r\n            </el-button>\r\n            <!-- <el-popconfirm\r\n                    confirm-button-text=\"确定\"\r\n                    cancel-button-text=\"取消\"\r\n                    icon=\"el-icon-info\"\r\n                    icon-color=\"red\"\r\n                    title=\"确定删除该用户吗？\r\n                    \"\r\n                    @confirm=\"singleDel(scope.row.id)\"\r\n                  > -->\r\n            <el-button type=\"danger\" @click=\"singleDel(scope.row.id)\">\r\n              删除<i class=\"el-icon-remove-outline\"></i>\r\n            </el-button>\r\n            <!-- </el-popconfirm> -->\r\n          </el-button-group>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <div class=\"page\">\r\n      <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"pageNum\"\r\n          background\r\n          :page-sizes=\"[5, 10, 15, 20]\"\r\n          :page-size=\"pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n      >\r\n      </el-pagination>\r\n    </div>\r\n\r\n    <el-dialog\r\n        title=\"新增用户\"\r\n        :visible.sync=\"centerDialogVisible\"\r\n        width=\"30%\"\r\n        center\r\n    >\r\n      <el-form\r\n          :model=\"ruleForm\"\r\n          :rules=\"rules\"\r\n          ref=\"ruleForm\"\r\n          label-width=\"100px\"\r\n          class=\"demo-ruleForm\"\r\n      >\r\n        <el-upload\r\n            class=\"avatar-uploader\"\r\n            :headers=\"myHeaders\"\r\n            action=\"http://8.138.10.52:6060/upload/\"\r\n            :show-file-list=\"false\"\r\n            :on-success=\"handleAvatarSuccess\"\r\n        >\r\n          <img v-if=\"ruleForm.avatar\" :src=\"ruleForm.avatar\" class=\"avatar\"/>\r\n          <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n        </el-upload>\r\n        <el-form-item label=\"用户昵称\" prop=\"nickname\">\r\n          <el-input v-model=\"ruleForm.nickname\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号码\" prop=\"phoneNumber\">\r\n          <el-input v-model=\"ruleForm.phoneNumber\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"ruleForm.email\" clearable></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"用户密码\" prop=\"password\">\r\n          <el-input\r\n              placeholder=\"请输入密码\"\r\n              v-model=\"ruleForm.password\"\r\n              show-password\r\n          ></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"用户性别\" prop=\"sex\">\r\n          <template>\r\n            <el-radio v-model=\"ruleForm.sex\" label=\"1\">男</el-radio>\r\n            <el-radio v-model=\"ruleForm.sex\" label=\"0\">女</el-radio>\r\n          </template>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"所属地区\" prop=\"region\">\r\n          <el-cascader\r\n              v-model=\"districtValue\"\r\n              placeholder=\"请选择所属地区\"\r\n              :options=\"districtOptions\"\r\n              filterable\r\n          ></el-cascader>\r\n        </el-form-item>\r\n        <el-form-item label=\"生日\">\r\n          <el-col :span=\"11\">\r\n            <el-form-item prop=\"createTime\">\r\n              <el-date-picker\r\n                  type=\"date\"\r\n                  placeholder=\"选择日期\"\r\n                  v-model=\"ruleForm.createTime\"\r\n                  style=\"width: 100%\"\r\n              ></el-date-picker>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm('ruleForm')\"\r\n          >确定\r\n          </el-button\r\n          >\r\n          <el-button @click=\"centerDialogVisible = false\">取消</el-button>\r\n          <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"User\",\r\n  data() {\r\n    return {\r\n      districtOptions: [],\r\n      districtValue: [],\r\n      multipleSelection: [],\r\n      tableData: [],\r\n      total: 0,\r\n      pageSize: 5,\r\n      pageNum: 1,\r\n      nickname: \"\",\r\n      account: \"\",\r\n      province: \"\",\r\n      centerDialogVisible: false,\r\n      // userState: true,\r\n      ruleForm: {\r\n        nickname: \"\",\r\n        phoneNumber: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        sex: \"\",\r\n        district: {\r\n          province: \"\",\r\n          city: \"\",\r\n          county: \"\",\r\n        },\r\n        districtId: null,\r\n        birthday: \"\",\r\n      },\r\n      pickerOptions: {\r\n        shortcuts: [{\r\n          text: '最近一周',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }, {\r\n          text: '最近一个月',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }, {\r\n          text: '最近三个月',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }]\r\n      },\r\n      dateTimeRange: [],\r\n      // dateTimeRange: [new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)],\r\n      rules: {\r\n        nickname: [\r\n          {required: false, message: \"请输入用户昵称\", trigger: \"blur\"},\r\n          {\r\n            min: 1,\r\n            max: 10,\r\n            message: \"长度在 1 到 10 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        phoneNumber: [\r\n          {required: true, message: \"请输入手机号码\", trigger: \"blur\"},\r\n          // { min: 3, max: 5, message: \"长度在 3 到 5 个字符\", trigger: \"blur\" },\r\n        ],\r\n        email: [\r\n          {required: false, message: \"请输入用户邮箱\", trigger: \"blur\"},\r\n          // { min: 3, max: 5, message: \"长度在 3 到 5 个字符\", trigger: \"blur\" },\r\n        ],\r\n        password: [\r\n          {required: true, message: \"请输入用户密码\", trigger: \"blur\"},\r\n          // { min: 3, max: 5, message: \"长度在 3 到 5 个字符\", trigger: \"blur\" },\r\n        ],\r\n\r\n        region: {\r\n          province: [\r\n            {\r\n              required: false,\r\n              message: \"请选择用户所属省份\",\r\n              trigger: \"change\",\r\n            },\r\n          ],\r\n          city: [\r\n            {\r\n              required: false,\r\n              message: \"请选择用户所属城市\",\r\n              trigger: \"change\",\r\n            },\r\n          ],\r\n          county: [\r\n            {\r\n              required: false,\r\n              message: \"请选择用户所属县区\",\r\n              trigger: \"change\",\r\n            },\r\n          ],\r\n        },\r\n        birthday: [\r\n          {\r\n            // type: \"date\",\r\n            required: false,\r\n            message: \"请选择用户创建时间\",\r\n            trigger: \"change\",\r\n          },\r\n        ],\r\n      },\r\n      // blankForm: {\r\n      //   nickname: \"\",\r\n      //   phoneNumber: \"\",\r\n      //   email: \"\",\r\n      //   password: \"\",\r\n      //   sex: null,\r\n      //   province: \"\",\r\n      //   city: \"\",\r\n      //   county: \"\",\r\n      //   districtId: null,\r\n      //   birthday: \"\",\r\n      //   avatar: \"\",\r\n      //   createTime: \"\",\r\n      // },\r\n      myHeaders: {\r\n        token: localStorage.getItem(\"accountData\") ? JSON.parse(localStorage.getItem(\"accountData\")).token : null,\r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n    deep: true,\r\n    districtValue(newValue, oldValue) {\r\n      if (newValue[2]) {\r\n        this.ruleForm.province = newValue[0];\r\n        this.ruleForm.city = newValue[1];\r\n        const arr = newValue[2].split(\"/\");\r\n        this.ruleForm.districtId = arr[0];\r\n        this.ruleForm.county = arr[1];\r\n      }\r\n      // console.log(newValue, oldValue);\r\n    },\r\n  },\r\n  methods: {\r\n    handleAvatarSuccess(res, file) {\r\n      this.ruleForm.avatar = res.data;\r\n      // this.$store.state.info = this.ruleForm;\r\n      // localStorage.setItem(\"admin\", JSON.stringify(this.ruleForm));\r\n      // this.submitForm();\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      const isJPG = file.type === \"image/jpeg\";\r\n      const isLt8M = file.size / 1024 / 1024 < 8;\r\n\r\n      if (!isJPG) {\r\n        this.$message.error(\"上传头像图片只能是 JPG 格式!\");\r\n      }\r\n      if (!isLt8M) {\r\n        this.$message.error(\"上传头像图片大小不能超过 8MB!\");\r\n      }\r\n      return isJPG && isLt8M;\r\n    },\r\n    save() {\r\n      //防止浏览器默认填密码行为\r\n      // this.resetForm()\r\n      const blankForm = {};\r\n      for (let key in this.ruleForm) {\r\n        blankForm[key] = ''\r\n      }\r\n      this.ruleForm = {...blankForm}\r\n      // this.ruleForm = {...this.blankForm};\r\n      // setTimeout(() => {\r\n      //   this.ruleForm = {...this.blankForm};\r\n      // }, 100);\r\n      //防止新增时表不为空值\r\n      //地区值（数组）不是每个用户的值\r\n      this.districtValue = [];\r\n      // this.ruleForm = { ...this.blankForm };\r\n      this.centerDialogVisible = true;\r\n    },\r\n    // toggleSelection(rows) {\r\n    //   if (rows) {\r\n    //     rows.forEach((row) => {\r\n    //       this.$refs.multipleTable.toggleRowSelection(row);\r\n    //     });\r\n    //   } else {\r\n    //     this.$refs.multipleTable.clearSelection();\r\n    //   }\r\n    // },\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n    search() {\r\n      this.fetchDate();\r\n    },\r\n    fetchDate() {\r\n      this.request\r\n          .get(\"/account/page\", {\r\n            params: {\r\n              pageNum: this.pageNum,\r\n              pageSize: this.pageSize,\r\n              nickname: this.nickname,\r\n              account: this.account,\r\n              province: this.province,\r\n              startTime: this.dateTimeRange[0],\r\n              endTime: this.dateTimeRange[1]\r\n            },\r\n          })\r\n          .then((res) => {\r\n            this.tableData = res.data.records;\r\n            this.tableData.forEach((ele) => {\r\n              ele.state = ele.state == 1;\r\n            });\r\n            this.total = res.data.total;\r\n          });\r\n    },\r\n    stateChange(row) {\r\n      const accountObj = {\r\n        id: row.id,\r\n        state: row.state,\r\n      };\r\n      accountObj.state = accountObj.state ? 1 : 0;\r\n      if (accountObj.state == 0) {\r\n        this.$message({\r\n          showClose: true,\r\n          message: \"已禁用用户：\" + row.nickname,\r\n          type: \"warning\",\r\n        });\r\n      } else {\r\n        this.$message({\r\n          showClose: true,\r\n          message: \"用户：\" + row.nickname + \"已解除禁用状态\",\r\n          type: \"success\",\r\n        });\r\n      }\r\n      this.request.post(\"/account\", accountObj);\r\n    },\r\n\r\n    handleEdit(row) {\r\n      this.ruleForm = {...row};\r\n      // delete this.ruleForm.state;\r\n      this.ruleForm.sex = '' + this.ruleForm.sex\r\n      this.districtValue = [\r\n        this.ruleForm.province,\r\n        this.ruleForm.city,\r\n        this.ruleForm.districtId + \"/\" + this.ruleForm.county,\r\n      ];\r\n      this.centerDialogVisible = true;\r\n    },\r\n    handleSizeChange(val) {\r\n      // console.log(`每页 ${val} 条`);\r\n      this.pageSize = val;\r\n      this.fetchDate();\r\n    },\r\n    handleCurrentChange(val) {\r\n      // console.log(`当前页: ${val}`);\r\n      this.pageNum = val;\r\n      this.fetchDate();\r\n    },\r\n    reset() {\r\n      this.nickname = \"\";\r\n      this.account = \"\";\r\n      this.province = \"\";\r\n      this.dateTimeRange = [];\r\n      this.fetchDate();\r\n    },\r\n\r\n    multipleDel() {\r\n      if (this.multipleSelection.length > 0) {\r\n        this.$confirm(\"此操作将永久删除这些用户, 是否继续?\", \"提示\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n        })\r\n            .then(() => {\r\n              this.multipleSelection.forEach((ele) => {\r\n                this.deleteUser(ele.id);\r\n                // console.log(ele);\r\n              });\r\n              // this.$message({\r\n\r\n              //   type: 'success',\r\n              //   message: '删除成功!'\r\n              // });\r\n            })\r\n            .catch(() => {\r\n              this.$message({\r\n                type: \"info\",\r\n                message: \"已取消删除\",\r\n              });\r\n            });\r\n      }\r\n    },\r\n    deleteUser(id) {\r\n      this.request.delete(\"/account/\" + id).then((res) => {\r\n        if (res) {\r\n          this.$message.success(\"删除成功\");\r\n          this.fetchDate();\r\n        } else {\r\n          this.$message.error(\"删除失败\");\r\n        }\r\n      });\r\n    },\r\n    singleDel(id) {\r\n      this.$confirm(\"此操作将永久删除该用户, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      })\r\n          .then(() => {\r\n            this.deleteUser(id);\r\n            // ruleForm;\r\n            // this.$message({\r\n\r\n            //   type: 'success',\r\n            //   message: '删除成功!'\r\n            // });\r\n          })\r\n          .catch(() => {\r\n            this.$message({\r\n              type: \"info\",\r\n              message: \"已取消删除\",\r\n            });\r\n          });\r\n    },\r\n\r\n    submitForm(ruleForm) {\r\n      this.$refs[ruleForm].validate((valid) => {\r\n        if (valid) {\r\n          this.ruleForm.sex = +this.ruleForm.sex\r\n          //修改用户对话框的不包含用户状态\r\n          delete this.ruleForm.state;\r\n          this.request.post(\"/account\", this.ruleForm).then((res) => {\r\n            // console.log(this.ruleForm);\r\n            if (res) {\r\n              // console.log(res);\r\n              this.$message.success(\"保存成功\");\r\n              this.centerDialogVisible = false;\r\n              this.fetchDate();\r\n            } else {\r\n              this.$message.error(\"保存失败\");\r\n            }\r\n          });\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n\r\n    formatDate(row, column) {\r\n      const timestamp = row[column.property];\r\n      const date = new Date(timestamp);\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n      const day = String(date.getDate()).padStart(2, \"0\");\r\n      const hours = String(date.getHours()).padStart(2, \"0\");\r\n      const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n      const seconds = String(date.getSeconds()).padStart(2, \"0\");\r\n      return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n      // return `${year}-${month}-${day}`;\r\n    },\r\n    resetForm(ruleForm) {\r\n      this.$refs[ruleForm].resetFields();\r\n      this.districtValue = [];\r\n    },\r\n    // tableRowClassName({ row, rowIndex }) {\r\n    //   console.log(row);\r\n    //   if (!row.state) {\r\n    //     return \"warning-row\";\r\n    //   }\r\n    //   return \"\";\r\n    // },\r\n    getDistrict() {\r\n      // this.request.get(\"\")\r\n      this.request.get(\"/account/district\").then((res) => {\r\n        res.data.forEach((item) => {\r\n          // 查找省份对象是否已存在\r\n          let provinceObj = this.districtOptions.find(\r\n              (option) => option.label === item.province\r\n          );\r\n          if (!provinceObj) {\r\n            // 如果省份对象不存在，则创建省份对象并添加到数组中\r\n            provinceObj = {\r\n              value: item.province,\r\n              label: item.province,\r\n              children: [],\r\n            };\r\n            this.districtOptions.push(provinceObj);\r\n          }\r\n\r\n          // 查找城市对象是否已存在\r\n          let cityObj = provinceObj.children.find(\r\n              (option) => option.label === item.city\r\n          );\r\n          if (!cityObj) {\r\n            // 如果城市对象不存在，则创建城市对象并添加到省份的children数组中\r\n            cityObj = {\r\n              value: item.city,\r\n              label: item.city,\r\n              children: [],\r\n            };\r\n            provinceObj.children.push(cityObj);\r\n          }\r\n\r\n          // 创建区县对象并添加到城市的children数组中\r\n          cityObj.children.push({\r\n            value: item.id + \"/\" + item.county,\r\n            label: item.county,\r\n          });\r\n        });\r\n        // console.log(this.districtOptions);\r\n      });\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchDate();\r\n    this.getDistrict();\r\n  },\r\n  mounted() {\r\n    // console.log(this.$store.state.info);\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}