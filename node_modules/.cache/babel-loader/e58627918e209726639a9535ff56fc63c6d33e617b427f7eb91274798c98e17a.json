{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      postList: [],\n      currentPage: 1,\n      // 当前页码\n      pageSize: 5,\n      // 每页显示的数据条数\n      textColor: \"black\"\n    };\n  },\n  methods: {\n    extractImages(htmlContent) {\n      const regex = /<img[^>]*src=[\"']([^\"']*)[\"'][^>]*>/gi;\n      let match;\n      let images = [];\n      while ((match = regex.exec(htmlContent)) !== null) {\n        // match[1] 包含src属性的值\n        images.push(match[1]);\n      }\n      return images;\n    },\n    getAccountPosts() {\n      const accountData = JSON.parse(localStorage.getItem(\"accountData\"));\n      this.request.post(\"/post/selectPostFootprint\", accountData.id).then(res => {\n        this.postList = res.data.reverse();\n      });\n    },\n    getSummary(text) {\n      const maxLineLength = 50; // 每行最大长度\n      const maxLines = 3; // 最大显示行数\n      const lines = text.split(\"\\n\"); // 将文本按行分割\n      let summary = \"\";\n\n      // 遍历每一行\n      for (let i = 0; i < maxLines && i < lines.length; i++) {\n        const line = lines[i];\n        // 如果当前行超过最大长度，则截断并添加省略号\n        if (line.length > maxLineLength) {\n          summary += line.slice(0, maxLineLength - 3) + \"......\"; // 截断并添加省略号\n        } else {\n          summary += line;\n        }\n        // 如果不是最后一行，则添加换行符\n        if (i < maxLines - 1 && i < lines.length - 1) {\n          summary += \"\\n\";\n        }\n      }\n      return summary;\n    },\n    changeColor() {\n      // 更新字体颜色\n      this.isShow = !this.isShow;\n    },\n    handlePageChange(newPage) {\n      this.currentPage = newPage; // 更新当前页码\n    },\n    postInto(postId) {\n      if (this.$route.name === \"帖子详情\") {\n        this.$router.push(\"/user/home\");\n        setTimeout(() => {\n          this.$router.push({\n            name: \"帖子详情\",\n            params: {\n              postId\n            }\n          });\n        }, 1);\n      } else {\n        this.$router.push({\n          name: \"帖子详情\",\n          params: {\n            postId\n          }\n        });\n      }\n    }\n  },\n  mounted() {\n    this.getAccountPosts();\n  },\n  computed: {\n    totalPosts() {\n      if (this.postList.length) {\n        return this.postList.length;\n      } else {\n        return null;\n      }\n    },\n    displayedPosts() {\n      if (this.postList) {\n        const startIndex = (this.currentPage - 1) * this.pageSize;\n        const endIndex = startIndex + this.pageSize;\n        return this.postList.slice(startIndex, endIndex);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","postList","currentPage","pageSize","textColor","methods","extractImages","htmlContent","regex","match","images","exec","push","getAccountPosts","accountData","JSON","parse","localStorage","getItem","request","post","id","then","res","reverse","getSummary","text","maxLineLength","maxLines","lines","split","summary","i","length","line","slice","changeColor","isShow","handlePageChange","newPage","postInto","postId","$route","name","$router","setTimeout","params","mounted","computed","totalPosts","displayedPosts","startIndex","endIndex"],"sources":["src/views/userViews/AccountCenter/AccountFootprint.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div\r\n          class=\"head\"\r\n          style=\"\r\n          height: 50px;\r\n  \r\n          display: flex;\r\n          align-items: center;\r\n          padding-left: 30px;\r\n          padding-right: 30px;\r\n        \"\r\n      >\r\n        <h3 style=\"font-weight: 350\">我的足迹</h3>\r\n      </div>\r\n  \r\n      <div v-if=\"!postList\">还没有足迹</div>\r\n      <!-- 显示帖子列表 -->\r\n      <!--    <div v-if=\"postList\"></div>-->\r\n      <div v-for=\"post in displayedPosts\" :key=\"post.postId\" style=\"width: 100%\" @click=\"postInto(post.postId)\">\r\n        <div\r\n            class=\"PostTime\"\r\n            style=\"\r\n            padding-left: 30px;\r\n            padding-right: 30px;\r\n            padding-top: 20px;\r\n            color: #999999;\r\n            font-size: 14px;\r\n            border-top: 1px solid #cccccc;\r\n          \"\r\n        >\r\n          <img src=\"\" alt=\"\" class=\"el-icon-time\"/>\r\n          {{ post.time }}\r\n        </div>\r\n        <div\r\n            class=\"PostMessage\"\r\n            style=\"padding: 20px 30px 30px 30px\"\r\n        >\r\n          <div class=\"PostTitle\" style=\"\">\r\n            <h3 style=\"font-weight: 550\">{{ post.title }}</h3>\r\n          </div>\r\n  \r\n          <div\r\n              class=\"PostText\"\r\n              v-html=\"getSummary(post.text)\"\r\n              style=\"color: #999999; font-size: 14px; margin-top: 10px\"\r\n          ></div>\r\n          <div class=\"img-box\">\r\n            <img style=\"width: 100px;height: 100px;margin: 8px;\" v-for=\"img in extractImages(post.text).splice(0,4)\"\r\n                :key=\"img\" :src=\"img\">\r\n          </div>\r\n        </div>\r\n  \r\n        <div\r\n            class=\"PostFoot\"\r\n            style=\"width: 100%; display: flex; justify-content: space-between\"\r\n        >\r\n          <div class=\"Left\"></div>\r\n          <div\r\n              class=\"Right\"\r\n              style=\"width: 20%; display: flex; justify-content: space-around\"\r\n          >\r\n            <div class=\"LikeCount\">\r\n              <img\r\n                  src=\"\"\r\n                  alt=\"\"\r\n                  class=\"iconfont icon-dianzan\"\r\n                  style=\"font-size: 20px\"\r\n              />\r\n              <span v-if=\"post.likeCount <= 999\" style=\"font-size: 14px\">{{\r\n                  post.likeCount\r\n                }}</span>\r\n              <span v-else style=\"font-size: 14px\">999+</span>\r\n            </div>\r\n  \r\n            <div class=\"commentCount\">\r\n              <img\r\n                  src=\"\"\r\n                  class=\"el-icon-chat-line-round\"\r\n                  style=\"font-size: 20px\"\r\n              />\r\n              <span v-if=\"post.commentCount <= 999\" style=\"font-size: 14px\">{{\r\n                  post.commentCount\r\n                }}</span>\r\n              <span v-else style=\"font-size: 14px\">999+</span>\r\n            </div>\r\n  \r\n            <div class=\"collectCount\">\r\n              <img\r\n                  src=\"\"\r\n                  alt=\"\"\r\n                  class=\"el-icon-star-off\"\r\n                  style=\"font-size: 20px\"\r\n              />\r\n              <span v-if=\"post.collectCount <= 999\" style=\"font-size: 14px\">{{\r\n                  post.collectCount\r\n                }}</span>\r\n              <span v-else style=\"font-size: 14px\">999+</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div\r\n          class=\"block\"\r\n          style=\"\r\n          border-top: 1px solid #cccccc;\r\n          height: 80px;\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n        \"\r\n      >\r\n        <el-pagination\r\n            background\r\n            layout=\"prev, pager, next\"\r\n            :total=\"totalPosts\"\r\n            :current-page.sync=\"currentPage\"\r\n            @current-change=\"handlePageChange\"\r\n        >\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        postList: [],\r\n        currentPage: 1, // 当前页码\r\n        pageSize: 5, // 每页显示的数据条数\r\n        textColor: \"black\",\r\n      };\r\n    },\r\n    methods: {\r\n      extractImages(htmlContent) {\r\n        const regex = /<img[^>]*src=[\"']([^\"']*)[\"'][^>]*>/gi;\r\n        let match;\r\n        let images = [];\r\n        while ((match = regex.exec(htmlContent)) !== null) {\r\n          // match[1] 包含src属性的值\r\n          images.push(match[1]);\r\n        }\r\n        return images;\r\n      },\r\n      getAccountPosts() {\r\n        const accountData = JSON.parse(localStorage.getItem(\"accountData\"));\r\n        this.request\r\n            .post(\"/post/selectPostFootprint\", accountData.id)\r\n            .then((res) => {\r\n              this.postList = res.data.reverse();\r\n            });\r\n      },\r\n      getSummary(text) {\r\n        const maxLineLength = 50; // 每行最大长度\r\n        const maxLines = 3; // 最大显示行数\r\n        const lines = text.split(\"\\n\"); // 将文本按行分割\r\n        let summary = \"\";\r\n  \r\n        // 遍历每一行\r\n        for (let i = 0; i < maxLines && i < lines.length; i++) {\r\n          const line = lines[i];\r\n          // 如果当前行超过最大长度，则截断并添加省略号\r\n          if (line.length > maxLineLength) {\r\n            summary += line.slice(0, maxLineLength - 3) + \"......\"; // 截断并添加省略号\r\n          } else {\r\n            summary += line;\r\n          }\r\n          // 如果不是最后一行，则添加换行符\r\n          if (i < maxLines - 1 && i < lines.length - 1) {\r\n            summary += \"\\n\";\r\n          }\r\n        }\r\n  \r\n        return summary;\r\n      },\r\n  \r\n      changeColor() {\r\n        // 更新字体颜色\r\n        this.isShow = !this.isShow;\r\n      },\r\n  \r\n      handlePageChange(newPage) {\r\n        this.currentPage = newPage; // 更新当前页码\r\n      },\r\n      postInto(postId) {\r\n        if (this.$route.name === \"帖子详情\") {\r\n          this.$router.push(\"/user/home\")\r\n          setTimeout(() => {\r\n            this.$router.push({name: \"帖子详情\", params: {postId}});\r\n          }, 1)\r\n        } else {\r\n          this.$router.push({name: \"帖子详情\", params: {postId}});\r\n        }\r\n      },\r\n    },\r\n    mounted() {\r\n      this.getAccountPosts();\r\n    },\r\n    computed: {\r\n      totalPosts() {\r\n        if (this.postList.length) {\r\n          return this.postList.length;\r\n        } else {\r\n          return null;\r\n        }\r\n      },\r\n      displayedPosts() {\r\n        if (this.postList) {\r\n          const startIndex = (this.currentPage - 1) * this.pageSize;\r\n          const endIndex = startIndex + this.pageSize;\r\n          return this.postList.slice(startIndex, endIndex);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .Like {\r\n    color: black;\r\n  }\r\n  \r\n  .NotLike {\r\n    color: pink;\r\n  }\r\n  </style>\r\n  \r\n  \r\n  "],"mappings":";AA8HA;EACAA,KAAA;IACA;MACAC,QAAA;MACAC,WAAA;MAAA;MACAC,QAAA;MAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,cAAAC,WAAA;MACA,MAAAC,KAAA;MACA,IAAAC,KAAA;MACA,IAAAC,MAAA;MACA,QAAAD,KAAA,GAAAD,KAAA,CAAAG,IAAA,CAAAJ,WAAA;QACA;QACAG,MAAA,CAAAE,IAAA,CAAAH,KAAA;MACA;MACA,OAAAC,MAAA;IACA;IACAG,gBAAA;MACA,MAAAC,WAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,KAAAC,OAAA,CACAC,IAAA,8BAAAN,WAAA,CAAAO,EAAA,EACAC,IAAA,CAAAC,GAAA;QACA,KAAAtB,QAAA,GAAAsB,GAAA,CAAAvB,IAAA,CAAAwB,OAAA;MACA;IACA;IACAC,WAAAC,IAAA;MACA,MAAAC,aAAA;MACA,MAAAC,QAAA;MACA,MAAAC,KAAA,GAAAH,IAAA,CAAAI,KAAA;MACA,IAAAC,OAAA;;MAEA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAJ,QAAA,IAAAI,CAAA,GAAAH,KAAA,CAAAI,MAAA,EAAAD,CAAA;QACA,MAAAE,IAAA,GAAAL,KAAA,CAAAG,CAAA;QACA;QACA,IAAAE,IAAA,CAAAD,MAAA,GAAAN,aAAA;UACAI,OAAA,IAAAG,IAAA,CAAAC,KAAA,IAAAR,aAAA;QACA;UACAI,OAAA,IAAAG,IAAA;QACA;QACA;QACA,IAAAF,CAAA,GAAAJ,QAAA,QAAAI,CAAA,GAAAH,KAAA,CAAAI,MAAA;UACAF,OAAA;QACA;MACA;MAEA,OAAAA,OAAA;IACA;IAEAK,YAAA;MACA;MACA,KAAAC,MAAA,SAAAA,MAAA;IACA;IAEAC,iBAAAC,OAAA;MACA,KAAArC,WAAA,GAAAqC,OAAA;IACA;IACAC,SAAAC,MAAA;MACA,SAAAC,MAAA,CAAAC,IAAA;QACA,KAAAC,OAAA,CAAAhC,IAAA;QACAiC,UAAA;UACA,KAAAD,OAAA,CAAAhC,IAAA;YAAA+B,IAAA;YAAAG,MAAA;cAAAL;YAAA;UAAA;QACA;MACA;QACA,KAAAG,OAAA,CAAAhC,IAAA;UAAA+B,IAAA;UAAAG,MAAA;YAAAL;UAAA;QAAA;MACA;IACA;EACA;EACAM,QAAA;IACA,KAAAlC,eAAA;EACA;EACAmC,QAAA;IACAC,WAAA;MACA,SAAAhD,QAAA,CAAAgC,MAAA;QACA,YAAAhC,QAAA,CAAAgC,MAAA;MACA;QACA;MACA;IACA;IACAiB,eAAA;MACA,SAAAjD,QAAA;QACA,MAAAkD,UAAA,SAAAjD,WAAA,aAAAC,QAAA;QACA,MAAAiD,QAAA,GAAAD,UAAA,QAAAhD,QAAA;QACA,YAAAF,QAAA,CAAAkC,KAAA,CAAAgB,UAAA,EAAAC,QAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}