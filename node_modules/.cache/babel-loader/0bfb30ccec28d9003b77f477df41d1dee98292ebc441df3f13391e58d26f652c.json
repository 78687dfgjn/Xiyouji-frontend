{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport SIdentify from \"@/components/userComponents/SIdentify.vue\";\nexport default {\n  name: \"UserLoginForm\",\n  components: {\n    SIdentify\n  },\n  data() {\n    return {\n      loginMode: true,\n      loading: false,\n      account: '',\n      password: '',\n      inputCode: '',\n      //前端验证码\n      identifyCodes: \"1234567890abcdefjhijklinopqrsduvwxyz\",\n      //随机串内容,从这里随机抽几个显示验证码\n      identifyCode: \"\",\n      //验证码图片内容\n      //后端验证码\n      captchaCode: '',\n      captchaCodeUrl: '',\n      userAvatar: require(\"@/assets/waoku.jpg\"),\n      email: '',\n      emailError: '',\n      passwordError: '',\n      accountError: ''\n    };\n  },\n  mounted() {\n    // this.getCaptchaCode()\n    this.identifyCode = \"\";\n    this.makeCode(this.identifyCodes, 4);\n\n    /*//下面是新页面里面加入的js\r\n    let switchCtn = document.querySelector(\"#switch-cnt\");\r\n    let switchC1 = document.querySelector(\"#switch-c1\");\r\n    let switchC2 = document.querySelector(\"#switch-c2\");\r\n    let switchCircle = document.querySelectorAll(\".switch_circle\");\r\n    let switchBtn = document.querySelectorAll(\".switch-btn\");\r\n    let aContainer = document.querySelector(\"#a-container\");\r\n    let bContainer = document.querySelector(\"#b-container\");\r\n    let allButtons = document.querySelectorAll(\".submit\");\r\n      let getButtons = (e) => e.preventDefault()\r\n    let changeForm = (e) => {\r\n      // 修改类名\r\n      switchCtn.classList.add(\"is-gx\");\r\n      setTimeout(function () {\r\n        switchCtn.classList.remove(\"is-gx\");\r\n      }, 1500)\r\n      switchCtn.classList.toggle(\"is-txr\");\r\n      switchCircle[0].classList.toggle(\"is-txr\");\r\n      switchCircle[1].classList.toggle(\"is-txr\");\r\n        switchC1.classList.toggle(\"is-hidden\");\r\n      switchC2.classList.toggle(\"is-hidden\");\r\n      aContainer.classList.toggle(\"is-txl\");\r\n      bContainer.classList.toggle(\"is-txl\");\r\n      bContainer.classList.toggle(\"is-z\");\r\n    }\r\n    // 点击切换\r\n    let shell = (e) => {\r\n      for (var i = 0; i < allButtons.length; i++)\r\n        allButtons[i].addEventListener(\"click\", getButtons);\r\n      for (var i = 0; i < switchBtn.length; i++)\r\n        switchBtn[i].addEventListener(\"click\", changeForm)\r\n    }\r\n    window.addEventListener(\"load\", shell);*/\n  },\n  methods: {\n    refreshCode() {\n      this.identifyCode = \"\";\n      this.makeCode(this.identifyCodes, 4);\n    },\n    //获取验证码的值\n    makeCode(o, l) {\n      for (let i = 0; i < l; i++) {\n        //通过循环获取字符串内随机几位\n        this.identifyCode += this.identifyCodes[this.randomNum(0, this.identifyCodes.length)];\n      }\n    },\n    //随机数字：用于当角标拿字符串的值\n    randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    getCaptchaCode() {\n      this.request.get(\"/account/captcha\").then(res => {\n        // console.log(res)\n        if (res.code === \"200\") {\n          this.captchaCodeUrl = URL.createObjectURL(new Blob([res.data], {\n            type: 'image/png'\n          }));\n          console.log(this.captchaCodeUrl);\n        }\n      }).then(err => {\n        // console.log(err)\n      });\n    },\n    userLogin() {\n      // this.identifyCode !== this.inputCode\n      if (this.identifyCode !== this.inputCode) {\n        this.$message.error(\"验证码错误\");\n        return;\n      }\n      this.request.post(\"/account/login\", {\n        account: this.account,\n        password: this.password\n      }).then(res => {\n        if (res.code === \"200\") {\n          localStorage.setItem(\"accountData\", JSON.stringify({\n            id: res.data.id,\n            account: res.data.account,\n            nickname: res.data.nickname,\n            avatar: res.data.avatar,\n            identity: res.data.identity,\n            token: res.data.token\n          }));\n          // window.location.href = 'http://localhost:8080/user/home'\n          this.$router.push('/user/home');\n          // alert('你妈的')\n          this.$message.success(\"登录成功，欢迎您，\" + res.data.nickname + \"!\");\n          // setTimeout(() => {\n          //   location.reload();\n          // }, 100)\n        } else {\n          this.$message.error('登录失败！请检查信息');\n        }\n      }).then(err => {\n        console.log(err);\n      });\n    },\n    searchAvatar() {\n      this.request.get('/account/avatar/' + this.account).then(res => {\n        // alert(res.data)\n        if (res.code === \"200\") {\n          this.userAvatar = res.data;\n        } else {\n          this.userAvatar = require(\"@/assets/waoku.jpg\");\n        }\n      }).then(err => {});\n    },\n    validateEmail() {\n      if (!this.email) {\n        this.emailError = '邮箱不能为空';\n      } else if (!/^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$/.test(this.email)) {\n        this.emailError = '邮箱格式不正确';\n      } else {\n        this.emailError = '';\n      }\n    },\n    validateAccount() {\n      if (!this.account) {\n        this.accountError = '账号不能为空';\n      } else if (this.account.length < 4) {\n        this.accountError = '账号长度不能小于 4 位';\n      } else {\n        this.accountError = '';\n      }\n    },\n    validatePassword() {\n      if (!this.password) {\n        this.passwordError = '密码不能为空';\n      } else if (this.password.length < 6) {\n        this.passwordError = '密码长度不能小于 6 位';\n      } else {\n        this.passwordError = '';\n      }\n    },\n    submit() {\n      this.validateEmail();\n      this.validatePassword();\n      if (!this.emailError && !this.passwordError) {\n        // 提交表单\n        console.log('提交表单');\n      } else {\n        console.log('表单验证失败');\n      }\n    },\n    goToRegister() {\n      this.$router.push('/userRegister');\n    }\n  }\n};","map":{"version":3,"names":["SIdentify","name","components","data","loginMode","loading","account","password","inputCode","identifyCodes","identifyCode","captchaCode","captchaCodeUrl","userAvatar","require","email","emailError","passwordError","accountError","mounted","makeCode","methods","refreshCode","o","l","i","randomNum","length","min","max","Math","floor","random","getCaptchaCode","request","get","then","res","code","URL","createObjectURL","Blob","type","console","log","err","userLogin","$message","error","post","localStorage","setItem","JSON","stringify","id","nickname","avatar","identity","token","$router","push","success","searchAvatar","validateEmail","test","validateAccount","validatePassword","submit","goToRegister"],"sources":["src/components/userComponents/NewLogin.vue"],"sourcesContent":["<script>\r\nimport SIdentify from \"@/components/userComponents/SIdentify.vue\";\r\n\r\nexport default {\r\n  name: \"UserLoginForm\",\r\n  components: {SIdentify},\r\n  data() {\r\n    return {\r\n      loginMode: true,\r\n      loading: false,\r\n      account: '',\r\n      password: '',\r\n      inputCode: '',\r\n      //前端验证码\r\n      identifyCodes: \"1234567890abcdefjhijklinopqrsduvwxyz\", //随机串内容,从这里随机抽几个显示验证码\r\n      identifyCode: \"\", //验证码图片内容\r\n      //后端验证码\r\n      captchaCode: '',\r\n      captchaCodeUrl: '',\r\n      userAvatar: require(\"@/assets/waoku.jpg\"),\r\n\r\n      email: '',\r\n      emailError: '',\r\n      passwordError: '',\r\n      accountError: ''\r\n\r\n    }\r\n  },\r\n  mounted() {\r\n    // this.getCaptchaCode()\r\n    this.identifyCode = \"\"\r\n    this.makeCode(this.identifyCodes, 4);\r\n\r\n\r\n    /*//下面是新页面里面加入的js\r\n    let switchCtn = document.querySelector(\"#switch-cnt\");\r\n    let switchC1 = document.querySelector(\"#switch-c1\");\r\n    let switchC2 = document.querySelector(\"#switch-c2\");\r\n    let switchCircle = document.querySelectorAll(\".switch_circle\");\r\n    let switchBtn = document.querySelectorAll(\".switch-btn\");\r\n    let aContainer = document.querySelector(\"#a-container\");\r\n    let bContainer = document.querySelector(\"#b-container\");\r\n    let allButtons = document.querySelectorAll(\".submit\");\r\n\r\n    let getButtons = (e) => e.preventDefault()\r\n    let changeForm = (e) => {\r\n      // 修改类名\r\n      switchCtn.classList.add(\"is-gx\");\r\n      setTimeout(function () {\r\n        switchCtn.classList.remove(\"is-gx\");\r\n      }, 1500)\r\n      switchCtn.classList.toggle(\"is-txr\");\r\n      switchCircle[0].classList.toggle(\"is-txr\");\r\n      switchCircle[1].classList.toggle(\"is-txr\");\r\n\r\n      switchC1.classList.toggle(\"is-hidden\");\r\n      switchC2.classList.toggle(\"is-hidden\");\r\n      aContainer.classList.toggle(\"is-txl\");\r\n      bContainer.classList.toggle(\"is-txl\");\r\n      bContainer.classList.toggle(\"is-z\");\r\n    }\r\n    // 点击切换\r\n    let shell = (e) => {\r\n      for (var i = 0; i < allButtons.length; i++)\r\n        allButtons[i].addEventListener(\"click\", getButtons);\r\n      for (var i = 0; i < switchBtn.length; i++)\r\n        switchBtn[i].addEventListener(\"click\", changeForm)\r\n    }\r\n    window.addEventListener(\"load\", shell);*/\r\n  },\r\n  methods: {\r\n    refreshCode() {\r\n      this.identifyCode = \"\";\r\n      this.makeCode(this.identifyCodes, 4);\r\n    },\r\n    //获取验证码的值\r\n    makeCode(o, l) {\r\n      for (let i = 0; i < l; i++) {\r\n        //通过循环获取字符串内随机几位\r\n        this.identifyCode +=\r\n            this.identifyCodes[this.randomNum(0, this.identifyCodes.length)];\r\n      }\r\n    },\r\n    //随机数字：用于当角标拿字符串的值\r\n    randomNum(min, max) {\r\n      return Math.floor(Math.random() * (max - min) + min);\r\n    },\r\n    getCaptchaCode() {\r\n      this.request.get(\"/account/captcha\").then(res => {\r\n        // console.log(res)\r\n        if (res.code === \"200\") {\r\n          this.captchaCodeUrl = URL.createObjectURL(new Blob([res.data], {type: 'image/png'}))\r\n          console.log(this.captchaCodeUrl)\r\n        }\r\n      }).then(err => {\r\n        // console.log(err)\r\n      })\r\n    },\r\n    userLogin() {\r\n\r\n      // this.identifyCode !== this.inputCode\r\n      if (this.identifyCode !== this.inputCode) {\r\n        this.$message.error(\"验证码错误\")\r\n        return\r\n      }\r\n      this.request.post(\"/account/login\", {\r\n        account: this.account,\r\n        password: this.password,\r\n      }).then(res => {\r\n        if (res.code === \"200\") {\r\n          localStorage.setItem(\r\n              \"accountData\",\r\n              JSON.stringify({\r\n                id: res.data.id,\r\n                account: res.data.account,\r\n                nickname: res.data.nickname,\r\n                avatar: res.data.avatar,\r\n                identity: res.data.identity,\r\n                token: res.data.token,\r\n              })\r\n          );\r\n          // window.location.href = 'http://localhost:8080/user/home'\r\n          this.$router.push('/user/home')\r\n          // alert('你妈的')\r\n          this.$message.success(\"登录成功，欢迎您，\" + res.data.nickname + \"!\")\r\n          // setTimeout(() => {\r\n          //   location.reload();\r\n          // }, 100)\r\n        } else {\r\n          this.$message.error('登录失败！请检查信息')\r\n        }\r\n      }).then(err => {\r\n        console.log(err)\r\n      })\r\n    },\r\n    searchAvatar() {\r\n      this.request.get('/account/avatar/' + this.account).then(res => {\r\n        // alert(res.data)\r\n        if (res.code === \"200\") {\r\n          this.userAvatar = res.data\r\n\r\n        } else {\r\n          this.userAvatar = require(\"@/assets/waoku.jpg\")\r\n        }\r\n      }).then(err => {\r\n\r\n\r\n      })\r\n    },\r\n\r\n\r\n    validateEmail() {\r\n      if (!this.email) {\r\n        this.emailError = '邮箱不能为空'\r\n      } else if (!/^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$/.test(this.email)) {\r\n        this.emailError = '邮箱格式不正确'\r\n      } else {\r\n        this.emailError = ''\r\n      }\r\n    },\r\n    validateAccount() {\r\n      if (!this.account) {\r\n        this.accountError = '账号不能为空'\r\n      } else if (this.account.length < 4) {\r\n        this.accountError = '账号长度不能小于 4 位'\r\n      } else {\r\n        this.accountError = ''\r\n      }\r\n    },\r\n    validatePassword() {\r\n      if (!this.password) {\r\n        this.passwordError = '密码不能为空'\r\n      } else if (this.password.length < 6) {\r\n        this.passwordError = '密码长度不能小于 6 位'\r\n      } else {\r\n        this.passwordError = ''\r\n      }\r\n    },\r\n    submit() {\r\n      this.validateEmail()\r\n      this.validatePassword()\r\n\r\n      if (!this.emailError && !this.passwordError) {\r\n        // 提交表单\r\n        console.log('提交表单')\r\n      } else {\r\n        console.log('表单验证失败')\r\n      }\r\n    },\r\n    goToRegister() {\r\n      this.$router.push('/userRegister')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"shell\">\r\n<!--    <div class=\"container b-container\" id=\"b-container\">\r\n      <form action=\"\" method=\"\" class=\"form\" id=\"a-form\">\r\n        <h2 class=\"form_title title\">创建账号</h2>\r\n        <div class=\"form_icons\">\r\n          <i class=\"iconfont icon-QQ\"></i>\r\n          <i class=\"iconfont icon-weixin\"></i>\r\n          <i class=\"iconfont icon-bilibili-line\"></i>\r\n        </div>\r\n        <span class=\"form_span\">选择注册方式或电子邮箱注册</span>\r\n        <input type=\"text\" class=\"form_input\" v-model=\"account\" placeholder=\"账号\" @blur=\"validateAccount\">\r\n        <span v-if=\"accountError\">{{ accountError }}</span>\r\n        <input type=\"text\" class=\"form_input\" v-model=\"password\" placeholder=\"密码\" @blur=\"validatePassword\">\r\n        <span v-if=\"passwordError\">{{ passwordError }}</span>\r\n        <input type=\"text\" class=\"form_input\" placeholder=\"手机号\">\r\n        <button class=\"form_button button submit\">创建</button>\r\n      </form>\r\n    </div>-->\r\n\r\n    <div class=\"container a-container\" id=\"a-container\">\r\n      <form action=\"\" method=\"\" class=\"form\" id=\"b-form\" >\r\n        <h2 class=\"form_title title\">登入账号</h2>\r\n        <div class=\"form_icons\">\r\n          <div class=\"iconfont icon-QQ\">\r\n            <a class=\"wall-icon wall-qq\"\r\n               href=\"https://graph.qq.com/oauth2.0/authorize?response_type=code&amp;client_id=101137284&amp;redirect_uri=http%3A%2F%2Fuser.zhihuishu.com%2Fopen%2FQQCallbackDispatcher.do%3Fclient_name%3DQQClient&amp;state=aRfKm82ucY\">\r\n              <img\r\n                  src=\"https://ts2.cn.mm.bing.net/th?id=OSK.9ac00b68716f3346e0e2e3f7b78348b8&w=46&h=46&c=11&rs=1&qlt=80&o=6&dpr=2&pid=SANGAM\"\r\n                  alt=\"\" srcset=\"\">\r\n            </a>\r\n          </div>\r\n          <div class=\"iconfont icon-weixin\">\r\n            <a class=\"wall-icon wall-weixin\"\r\n               href=\"https://open.weixin.qq.com/connect/qrconnect?appid=wx3f96cd4b1dc1f574&amp;redirect_uri=https://user.zhihuishu.com/zhsuser/oauth/weixin/wxLogin?service=https://onlineservice-api.zhihuishu.com/login/gologin&amp;response_type=code&amp;scope=snsapi_login&amp;state=STATE#wechat_redirect\">\r\n              <img\r\n                  src=\"https://ts2.cn.mm.bing.net/th?id=OSK.5a68ae111a2e9c0be9971d838e51ceac&w=46&h=46&c=11&rs=1&qlt=80&o=6&dpr=2&pid=SANGAM\"\r\n                  alt=\"\" srcset=\"\">\r\n            </a>\r\n          </div>\r\n          <i class=\"iconfont icon-bilibili-line\"></i>\r\n        </div>\r\n        <!-- <span class=\"form_span\">选择登录方式或电子邮箱登录</span> -->\r\n        <!-- <input type=\"text\" class=\"form_input\" placeholder=\"Email\"> -->\r\n        <!--1.账号-->\r\n        <!-- <label for=\"username\" class=\"input-label\">账号</label> -->\r\n        <input type=\"text\" id=\"username\" v-model=\"account\" placeholder=\"请输入账号\" required class=\"form_input\"\r\n               @change=\"searchAvatar\" @blur=\"validateAccount\">\r\n        <span v-if=\"accountError\" class=\"error\">{{ accountError }}</span>\r\n\r\n        <!-- <input type=\"text\" class=\"form_input\" placeholder=\"Password\"> -->\r\n        <!--2.密码-->\r\n        <input type=\"password\" id=\"password\" v-model=\"password\" placeholder=\"请输入密码\" required class=\"form_input\"\r\n               @blur=\"validatePassword\">\r\n        <span v-if=\"passwordError\" class=\"error\">{{ passwordError }}</span>\r\n        <!--3.验证码-->\r\n        <div style=\"display: flex;justify-content: space-between;align-items: center;\"\r\n             class=\"verification_code\">\r\n          <input type=\"text\" id=\"captchaCode\" v-model=\"inputCode\" placeholder=\"请输入验证码\" required\r\n                 style=\"width: 70%\" class=\"form_input\"\r\n                  @keyup.enter=\"userLogin\"\r\n          >\r\n<!--                    @keyup.enter.native=\"userLogin\"-->\r\n          <div @click=\"refreshCode\">\r\n            <SIdentify  :identifyCode=\"identifyCode\"></SIdentify>\r\n          </div>\r\n          <!--            <img :src=\"captchaCodeUrl\">-->\r\n        </div>\r\n\r\n        <a class=\"form_link\">忘记密码？</a>\r\n        <button type=\"button\" class=\"form_button button submit\" @click=\"userLogin\">登录</button>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"switch\" id=\"switch-cnt\">\r\n      <div class=\"switch_circle\"></div>\r\n      <div class=\"switch_circle switch_circle-t\"></div>\r\n      <div class=\"switch_container\" id=\"switch-c1\">\r\n        <h2 class=\"switch_title title\" style=\"letter-spacing: 0;\">欢迎回来！</h2>\r\n        <p class=\"switch_description description\">已经有账号了嘛，去登入账号来进入奇妙世界吧！！！</p>\r\n        <!-- <button class=\"switch_button button switch-btn\">创建</button> -->\r\n        <button class=\"switch_button button\" @click=\"goToRegister\">创建</button>\r\n      </div>\r\n\r\n      <div class=\"switch_container is-hidden\" id=\"switch-c2\">\r\n        <h2 class=\"switch_title title\" style=\"letter-spacing: 0;\">你好，朋友！</h2>\r\n        <p class=\"switch_description description\">去注册一个账号，成为尊贵的粉丝会员，让我们踏入奇妙的旅途！</p>\r\n        <button class=\"switch_button button switch-btn\">登录</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  /* 字体无法选中 */\r\n  user-select: none;\r\n}\r\n\r\nbody {\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 12px;\r\n  background-color: #ecf0f3;\r\n  color: #a0a5a8;\r\n}\r\n\r\n.shell {\r\n  position: relative;\r\n  width: 1000px;\r\n  min-width: 1000px;\r\n  min-height: 600px;\r\n  height: 600px;\r\n  padding: 25px;\r\n  background-color: #ecf0f3;\r\n  /* box-shadow: 10px 10px 10px #d1d9e6, -10px -10px 10px #f9f9f9; */\r\n  box-shadow: rgba(3, 102, 214, 0.3) 0px 0px 0px 3px;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  font-size: small;\r\n}\r\n\r\n/* 设置响应式 */\r\n@media (max-width: 1200px) {\r\n  .shell {\r\n    transform: scale(0.7);\r\n  }\r\n}\r\n\r\n@media (max-width: 1000px) {\r\n  .shell {\r\n    transform: scale(0.6);\r\n  }\r\n}\r\n\r\n@media (max-width: 800px) {\r\n  .shell {\r\n    transform: scale(0.5);\r\n  }\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .shell {\r\n    transform: scale(0.4);\r\n  }\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 600px;\r\n  height: 100%;\r\n  padding: 25px;\r\n  background-color: #ecf0f3;\r\n  transition: 1.25s;\r\n}\r\n\r\n.form {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.iconfont {\r\n  margin: 0 5px;\r\n  /* border: rgba(0, 0, 0, 0.5) 2px solid; */\r\n  border-radius: 50%;\r\n  height: 54px;\r\n  width: 54px;\r\n  /* font-size: 25px; */\r\n  padding: 3px;\r\n  opacity: 0.8;\r\n  transition: 0.1s;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.form_icons {\r\n  /* background-color: skyblue; */\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.iconfont img {\r\n  height: 50px;\r\n  width: 50px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.iconfont:hover {\r\n  opacity: 1;\r\n  transition: 0.15s;\r\n  cursor: pointer;\r\n}\r\n\r\n.form_input {\r\n  width: 350px;\r\n  height: 40px;\r\n  margin: 4px 0;\r\n  padding-left: 25px;\r\n  font-size: 13px;\r\n  letter-spacing: 0.15px;\r\n  border: none;\r\n  outline: none;\r\n  background-color: #ecf0f3;\r\n  transition: 0.25s ease;\r\n  border-radius: 8px;\r\n  box-shadow: inset 2px 2px 4px #d1d9e6, inset -2px -2px 4px #f9f9f9;\r\n}\r\n\r\n.verification_code {\r\n  width: 350px;\r\n  height: 40px;\r\n}\r\n\r\n.form_input:focus {\r\n  box-shadow: inset 4px 4px 4px #d1d9e6, inset -4px -4px 4px #f9f9f9;\r\n}\r\n\r\n.form_span {\r\n  margin-top: 30px;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.form_link {\r\n  color: #181818;\r\n  font-size: 15px;\r\n  margin-top: 25px;\r\n  border-bottom: 1px solid #a0a5a8;\r\n  line-height: 2;\r\n}\r\n\r\n.form_link:hover {\r\n  color: blue;\r\n  cursor: pointer;\r\n}\r\n\r\n.title {\r\n  font-size: 34px;\r\n  font-weight: 700;\r\n  line-height: 3;\r\n  color: #181818;\r\n  letter-spacing: 10px;\r\n}\r\n\r\n.description {\r\n  font-size: 14px;\r\n  letter-spacing: 0.25px;\r\n  text-align: center;\r\n  line-height: 1.6;\r\n}\r\n\r\n.button {\r\n  width: 180px;\r\n  height: 50px;\r\n  border-radius: 25px;\r\n  margin-top: 50px;\r\n  font-weight: 700;\r\n  font-size: 14px;\r\n  letter-spacing: 1.15px;\r\n  background-color: #4B70E2;\r\n  color: #f9f9f9;\r\n  box-shadow: 8px 8px 16px #d1d9e6, -8px -8px 16px #f9f9f9;\r\n  border: none;\r\n  outline: none;\r\n}\r\n\r\n.a-container {\r\n  z-index: 100;\r\n  left: calc(100% - 600px);\r\n}\r\n\r\n.b-container {\r\n  left: calc(100% - 600px);\r\n  z-index: 0;\r\n}\r\n\r\n.switch {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 400px;\r\n  padding: 50px;\r\n  z-index: 200;\r\n  transition: 1.25s;\r\n  background-color: #ecf0f3;\r\n  overflow: hidden;\r\n  box-shadow: 4px 4px 10px #d1d9e6, -4px -4px 10px #d1d9e6;\r\n}\r\n\r\n.switch_circle {\r\n  position: absolute;\r\n  width: 500px;\r\n  height: 500px;\r\n  border-radius: 50%;\r\n  background-color: #ecf0f3;\r\n  box-shadow: inset 8px 8px 12px #b8bec7, inset -8px -8px 12px #fff;\r\n  bottom: -60%;\r\n  left: -60%;\r\n  transition: 1.25s;\r\n}\r\n\r\n.switch_circle-t {\r\n  top: -30%;\r\n  left: 60%;\r\n  width: 300px;\r\n  height: 300px;\r\n}\r\n\r\n.switch_container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  width: 400px;\r\n  padding: 50px 55px;\r\n  transition: 1.25s;\r\n}\r\n\r\n.switch_button {\r\n  cursor: pointer;\r\n}\r\n\r\n.switch_button:hover,\r\n.submit:hover {\r\n  box-shadow: 6px 6px 10px #d1d9e6, -6px -6px 10px #f9f9f9;\r\n  transform: scale(0.985);\r\n  transition: 0.25s;\r\n}\r\n\r\n.switch_button:active,\r\n.switch_button:focus {\r\n  box-shadow: 2px 2px 6px #d1d9e6, -2px -2px 6px #f9f9f9;\r\n  transform: scale(0.97);\r\n  transition: 0.25s;\r\n}\r\n\r\n.is-txr {\r\n  left: calc(100% - 400px);\r\n  transition: 1.25s;\r\n  transform-origin: left;\r\n}\r\n\r\n.is-txl {\r\n  left: 0;\r\n  transition: 1.25s;\r\n  transform-origin: right;\r\n}\r\n\r\n.is-z {\r\n  z-index: 200;\r\n  transition: 1.25s;\r\n}\r\n\r\n.is-hidden {\r\n  visibility: hidden;\r\n  opacity: 0;\r\n  position: absolute;\r\n  transition: 1.25s;\r\n}\r\n\r\n.is-gx {\r\n  animation: is-gx 1.25s;\r\n}\r\n\r\n@keyframes is-gx {\r\n\r\n  0%,\r\n  10%,\r\n  100% {\r\n    width: 400px;\r\n  }\r\n\r\n  30%,\r\n  50% {\r\n    width: 500px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}