{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Face\",\n  data() {\n    return {\n      inter: \"\",\n      loading: false,\n      mediaStream: null\n    };\n  },\n  mounted() {\n    this.startCamera();\n    this.inter = setInterval(() => {\n      this.loading = false;\n      this.login();\n      this.loading = true;\n    }, 3000);\n  },\n  methods: {\n    startCamera() {\n      const video = this.$refs.video;\n      navigator.mediaDevices.getUserMedia({\n        video: {\n          width: 300,\n          height: 300\n        },\n        audio: false\n      }).then(mediaStream => {\n        this.mediaStream = mediaStream;\n        video.srcObject = mediaStream;\n        video.play();\n      }).catch(error => {\n        console.error('启动摄像头失败：', error);\n      });\n    },\n    stopCamera() {\n      const video = this.$refs.video;\n      // console.log(this.mediaStream)\n\n      // this.mediaStreamTrack.active = false\n      if (this.mediaStream) {\n        const tracks = this.mediaStream.getTracks();\n        tracks.forEach(track => track.stop());\n        video.srcObject = null;\n        // video.value.srcObject = null;\n        // console.log(\"关闭后\" + this.mediaStream)\n      }\n    },\n    takePhoto() {\n      const canvas = this.$refs.canvas;\n      const video = this.$refs.video;\n      const context = canvas.getContext('2d');\n      context.drawImage(video, 0, 0, 300, 300);\n    },\n    login() {\n      this.takePhoto();\n      const canvas = this.$refs.canvas;\n      // const imgData = canvas.toDataURL('image/jpeg');\n      // 将 Canvas 数据转换为 Blob 对象\n      canvas.toBlob(blob => {\n        if (blob) {\n          // 创建 FormData 对象\n          const formData = new FormData();\n          formData.append('file', blob, 'image.jpg');\n\n          // 发送文件数据到后端\n          this.request.post('/upload', formData).then(response => {\n            // 处理上传成功的响应\n            console.log('上传成功：', response.data);\n            this.request.post('/account/face', {\n              id: 1003,\n              url: response.data\n            }).then(res => {\n              if (res.code === \"200\") {\n                this.$message.success(res.msg);\n                setTimeout(() => {\n                  this.$message.success('登录成功');\n                }, 100);\n                this.stopCamera();\n                clearInterval(this.inter);\n                this.$router.push(\"/manage/home\");\n                setTimeout(() => {\n                  location.reload();\n                }, 100);\n              } else {\n                this.$message.error(res.msg);\n                setTimeout(() => {\n                  this.$message.error('登录失败');\n                }, 100);\n              }\n            }).catch(error => {\n              console.error('登录请求失败：', error);\n              this.$message.error('登录失败，请稍后重试！');\n            });\n          }).catch(error => {\n            // 处理上传失败的情况\n            console.error('上传失败：', error);\n          });\n        } else {\n          console.error('无法转换 Blob 对象');\n        }\n      }, 'image/jpeg');\n    }\n  }\n};","map":{"version":3,"names":["name","data","inter","loading","mediaStream","mounted","startCamera","setInterval","login","methods","video","$refs","navigator","mediaDevices","getUserMedia","width","height","audio","then","srcObject","play","catch","error","console","stopCamera","tracks","getTracks","forEach","track","stop","takePhoto","canvas","context","getContext","drawImage","toBlob","blob","formData","FormData","append","request","post","response","log","id","url","res","code","$message","success","msg","setTimeout","clearInterval","$router","push","location","reload"],"sources":["src/components/manageComponents/Face.vue"],"sourcesContent":["<script>\r\n\r\nexport default {\r\n  name: \"Face\",\r\n  data() {\r\n    return {\r\n      inter: \"\",\r\n      loading: false,\r\n      mediaStream: null,\r\n    }\r\n  },\r\n  mounted() {\r\n    this.startCamera()\r\n    this.inter = setInterval(\r\n        () => {\r\n          this.loading = false\r\n          this.login()\r\n          this.loading = true\r\n        }, 3000\r\n    )\r\n  },\r\n  methods: {\r\n    startCamera() {\r\n      const video = this.$refs.video;\r\n      navigator.mediaDevices.getUserMedia({video: {width: 300, height: 300}, audio: false})\r\n          .then(mediaStream => {\r\n            this.mediaStream = mediaStream\r\n            video.srcObject = mediaStream;\r\n            video.play();\r\n          })\r\n          .catch(error => {\r\n            console.error('启动摄像头失败：', error);\r\n          });\r\n    },\r\n    stopCamera() {\r\n      const video = this.$refs.video\r\n      // console.log(this.mediaStream)\r\n\r\n      // this.mediaStreamTrack.active = false\r\n      if (this.mediaStream) {\r\n        const tracks = this.mediaStream.getTracks();\r\n        tracks.forEach(track => track.stop());\r\n        video.srcObject = null;\r\n        // video.value.srcObject = null;\r\n        // console.log(\"关闭后\" + this.mediaStream)\r\n      }\r\n    },\r\n    takePhoto() {\r\n      const canvas = this.$refs.canvas;\r\n      const video = this.$refs.video;\r\n\r\n      const context = canvas.getContext('2d');\r\n      context.drawImage(video, 0, 0, 300, 300);\r\n    },\r\n    login() {\r\n      this.takePhoto()\r\n      const canvas = this.$refs.canvas;\r\n      // const imgData = canvas.toDataURL('image/jpeg');\r\n      // 将 Canvas 数据转换为 Blob 对象\r\n      canvas.toBlob(blob => {\r\n        if (blob) {\r\n          // 创建 FormData 对象\r\n          const formData = new FormData();\r\n          formData.append('file', blob, 'image.jpg');\r\n\r\n          // 发送文件数据到后端\r\n          this.request.post('/upload', formData)\r\n              .then(response => {\r\n                // 处理上传成功的响应\r\n                console.log('上传成功：', response.data);\r\n\r\n                this.request.post('/account/face', {\r\n                  id: 1003,\r\n                  url: response.data,\r\n                })\r\n                    .then(res => {\r\n                      if (res.code === \"200\") {\r\n                        this.$message.success(res.msg);\r\n                        setTimeout(() => {\r\n                          this.$message.success('登录成功');\r\n                        }, 100)\r\n                        this.stopCamera()\r\n                        clearInterval(this.inter)\r\n                        this.$router.push(\"/manage/home\")\r\n                        setTimeout(() => {\r\n                          location.reload();\r\n                        }, 100)\r\n                      } else {\r\n                        this.$message.error(res.msg);\r\n                        setTimeout(() => {\r\n                          this.$message.error('登录失败');\r\n                        }, 100)\r\n\r\n                      }\r\n                    })\r\n                    .catch(error => {\r\n                      console.error('登录请求失败：', error);\r\n                      this.$message.error('登录失败，请稍后重试！');\r\n                    });\r\n              })\r\n              .catch(error => {\r\n                // 处理上传失败的情况\r\n                console.error('上传失败：', error);\r\n              });\r\n        } else {\r\n          console.error('无法转换 Blob 对象');\r\n        }\r\n      }, 'image/jpeg');\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <!--    <el-button class=\"btn\" @click=\"startCamera\">开始摄像</el-button>-->\r\n    <!--    <el-button class=\"btn\" @click=\"takePhoto\">拍照</el-button>-->\r\n    <div v-loading=\"loading\"\r\n         element-loading-text=\"校验人脸信息中，请耐心等待……\"\r\n         element-loading-spinner=\"el-icon-loading\"\r\n         element-loading-background=\"rgba(0, 0, 0, 0.2)\"\r\n         style=\" width:300px; height:300px\">\r\n      <video ref=\"video\" id=\"video\" width=\"300\" height=\"300\" style=\"border: 5px solid #000; border-radius: 10px;\"\r\n      ></video>\r\n    </div>\r\n    <canvas ref=\"canvas\" id=\"canvas\" width=\"300\" height=\"300\"\r\n            style=\"border: 5px solid #000 ; display: none; border-radius: 10px;\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n/*.btn {\r\n  width: 100px;\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  background: #ff9900;\r\n  line-height: 50px;\r\n  text-align: center;\r\n  color: #fff;\r\n  box-shadow: 0 0 10px #999;\r\n  margin-right: 10px;\r\n}*/\r\n</style>\r\n"],"mappings":";AAEA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;IACA,KAAAJ,KAAA,GAAAK,WAAA,CACA;MACA,KAAAJ,OAAA;MACA,KAAAK,KAAA;MACA,KAAAL,OAAA;IACA,OACA;EACA;EACAM,OAAA;IACAH,YAAA;MACA,MAAAI,KAAA,QAAAC,KAAA,CAAAD,KAAA;MACAE,SAAA,CAAAC,YAAA,CAAAC,YAAA;QAAAJ,KAAA;UAAAK,KAAA;UAAAC,MAAA;QAAA;QAAAC,KAAA;MAAA,GACAC,IAAA,CAAAd,WAAA;QACA,KAAAA,WAAA,GAAAA,WAAA;QACAM,KAAA,CAAAS,SAAA,GAAAf,WAAA;QACAM,KAAA,CAAAU,IAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,aAAAA,KAAA;MACA;IACA;IACAE,WAAA;MACA,MAAAd,KAAA,QAAAC,KAAA,CAAAD,KAAA;MACA;;MAEA;MACA,SAAAN,WAAA;QACA,MAAAqB,MAAA,QAAArB,WAAA,CAAAsB,SAAA;QACAD,MAAA,CAAAE,OAAA,CAAAC,KAAA,IAAAA,KAAA,CAAAC,IAAA;QACAnB,KAAA,CAAAS,SAAA;QACA;QACA;MACA;IACA;IACAW,UAAA;MACA,MAAAC,MAAA,QAAApB,KAAA,CAAAoB,MAAA;MACA,MAAArB,KAAA,QAAAC,KAAA,CAAAD,KAAA;MAEA,MAAAsB,OAAA,GAAAD,MAAA,CAAAE,UAAA;MACAD,OAAA,CAAAE,SAAA,CAAAxB,KAAA;IACA;IACAF,MAAA;MACA,KAAAsB,SAAA;MACA,MAAAC,MAAA,QAAApB,KAAA,CAAAoB,MAAA;MACA;MACA;MACAA,MAAA,CAAAI,MAAA,CAAAC,IAAA;QACA,IAAAA,IAAA;UACA;UACA,MAAAC,QAAA,OAAAC,QAAA;UACAD,QAAA,CAAAE,MAAA,SAAAH,IAAA;;UAEA;UACA,KAAAI,OAAA,CAAAC,IAAA,YAAAJ,QAAA,EACAnB,IAAA,CAAAwB,QAAA;YACA;YACAnB,OAAA,CAAAoB,GAAA,UAAAD,QAAA,CAAAzC,IAAA;YAEA,KAAAuC,OAAA,CAAAC,IAAA;cACAG,EAAA;cACAC,GAAA,EAAAH,QAAA,CAAAzC;YACA,GACAiB,IAAA,CAAA4B,GAAA;cACA,IAAAA,GAAA,CAAAC,IAAA;gBACA,KAAAC,QAAA,CAAAC,OAAA,CAAAH,GAAA,CAAAI,GAAA;gBACAC,UAAA;kBACA,KAAAH,QAAA,CAAAC,OAAA;gBACA;gBACA,KAAAzB,UAAA;gBACA4B,aAAA,MAAAlD,KAAA;gBACA,KAAAmD,OAAA,CAAAC,IAAA;gBACAH,UAAA;kBACAI,QAAA,CAAAC,MAAA;gBACA;cACA;gBACA,KAAAR,QAAA,CAAA1B,KAAA,CAAAwB,GAAA,CAAAI,GAAA;gBACAC,UAAA;kBACA,KAAAH,QAAA,CAAA1B,KAAA;gBACA;cAEA;YACA,GACAD,KAAA,CAAAC,KAAA;cACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;cACA,KAAA0B,QAAA,CAAA1B,KAAA;YACA;UACA,GACAD,KAAA,CAAAC,KAAA;YACA;YACAC,OAAA,CAAAD,KAAA,UAAAA,KAAA;UACA;QACA;UACAC,OAAA,CAAAD,KAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}